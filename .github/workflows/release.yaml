name: Release

on:
  workflow_dispatch:
    inputs:
      dryRun:
        description: 'Dry run'
        required: false
        type: boolean
        default: false
      debug:
        description: 'Debug mode'
        required: false
        type: boolean
        default: false

permissions:
  contents: read

env:
  HUSKY: 0

jobs:
  release:
    if: github.event_name == 'workflow_dispatch' && github.actor == 'pplancq'
    name: Release
    permissions:
      contents: write
      issues: write
      pull-requests: write
      id-token: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: pplancq/actions/setup-node@main

      - name: Install package
        run: npm ci

      - name: Run build
        run: npm run build

      - name: Config npm
        run: |
          npm config set access=public
          npm config set provenance=true

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GIT_AUTHOR_EMAIL: ${{ vars.GIT_AUTHOR_EMAIL }}
          GIT_AUTHOR_NAME: ${{ vars.GIT_AUTHOR_NAME }}
          GIT_COMMITTER_EMAIL: ${{ vars.GIT_COMMITTER_EMAIL }}
          GIT_COMMITTER_NAME: ${{ vars.GIT_COMMITTER_NAME }}
          GIT_ASSETS: ${{ vars.GIT_ASSETS }}
          GITHUB_DISABLED_SUCCESS_COMMENT: 'true'
          GITHUB_DISABLED_RELEASED_LABELS: 'true'
        run: |
          ARGS=""
          if [ "${{ github.event.inputs.dryRun }}" = "true" ]; then
            ARGS="$ARGS --dry-run"
          fi
          if [ "${{ github.event.inputs.debug }}" = "true" ]; then
            ARGS="$ARGS --debug"
          fi
          npm run release -- $ARGS

      - name: Update package-lock.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npm install
          git config user.email "${{ vars.GIT_COMMITTER_EMAIL }}"
          git config user.name "${{ vars.GIT_COMMITTER_NAME }}"
          git add package-lock.json
          git commit -m "chore(dev-tools): fix package-lock.json [skip ci]"
          git push origin main
        continue-on-error: true
